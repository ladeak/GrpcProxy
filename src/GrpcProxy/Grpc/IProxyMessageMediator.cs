using System.Threading.Channels;
using Grpc.Core;

namespace GrpcProxy.Grpc
{
    public interface IProxyMessageMediator
    {
        ChannelReader<ProxyMessage> ChannelReader { get; }

        ValueTask AddRequestAsync(HttpContext context, Guid proxyCallId, MethodType methodType, string data);

        ValueTask AddResponseAsync(HttpResponseMessage response, string serviceAddress, Guid proxyCallId, string path, MethodType methodType, string data);

        ValueTask AddCancellationAsync(HttpContext context, Guid proxyCallId, MethodType methodType);

        /// <summary>
        /// Publishes a proxy error message to the mediator.
        /// </summary>
        /// <param name="context">The original HttpContext.</param>
        /// <param name="proxyCallId">Id of the proxy call generated by the call handler.</param>
        /// <param name="exception">Exception of the error.</param>
        /// <param name="methodType">Grpc Method Type.</param>
        /// <returns>A value task that may be awaited.</returns>
        ValueTask AddErrorAsync(HttpContext context, Guid proxyCallId, Exception exception, MethodType methodType);
    }
}